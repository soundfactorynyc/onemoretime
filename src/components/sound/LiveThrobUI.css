/* LiveThrobUI CSS Animations */

@keyframes throb {
  0% { 
    transform: scale(1); 
    opacity: 1; 
  }
  50% { 
    transform: scale(1.015); 
    opacity: 0.92; 
  }
  100% { 
    transform: scale(1); 
    opacity: 1; 
  }
}

/* Apply throb animation */
.throb-animation {
  animation: throb 0.6s ease-in-out infinite;
}

/* Button Interaction Styles */
.button {
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.button:hover {
  transform: scale(1.02);
  transition: transform 0.2s ease;
}

.button:active {
  transform: scale(1.04);
  box-shadow: 0 0 8px rgba(255,255,255,0.4);
}

/* Throb utility class */
.throb {
  animation: throb 2s ease-in-out infinite;
}

/* Subtle pulse for audio-reactive elements */
.pulse-subtle {
  animation: throb 1.5s ease-in-out infinite;
}

/* Subtle ripple effect */
@keyframes ripple {
  0% {
    transform: scale(1);
    opacity: 0.3;
  }
  100% {
    transform: scale(2.5);
    opacity: 0;
  }
}

.ripple-effect {
  animation: ripple 1.2s ease-out forwards;
}

/* Water ripple effect */
@keyframes ripple {
  0% { 
    transform: scale(0); 
    opacity: 1; 
  }
  100% { 
    transform: scale(4); 
    opacity: 0; 
  }
}

.ripple {
  animation: ripple 1.2s ease-out;
}

/* Water-like surface effect */
@keyframes water-surface {
  0%, 100% {
    transform: scale(1) translateY(0);
  }
  25% {
    transform: scale(1.002) translateY(-0.5px);
  }
  50% {
    transform: scale(0.998) translateY(0.5px);
  }
  75% {
    transform: scale(1.001) translateY(-0.2px);
  }
}

.water-surface {
  animation: water-surface 2s ease-in-out infinite;
}

/* Gentle pulse for active state */
.gentle-pulse {
  animation: throb 1.2s ease-in-out infinite;
}

/* LiveThrobUI Atmospheric Effects */

/* Throb animation - super subtle breathing */
@keyframes throb {
  0% { transform: scale(1); opacity: 1; }
  50% { transform: scale(1.015); opacity: 0.92; }
  100% { transform: scale(1); opacity: 1; }
}

/* Button interactions - soft pulses */
.button {
  transition: all 0.2s ease;
}

.button:hover {
  transform: scale(1.02);
  transition: transform 0.2s ease;
}

.button:active {
  transform: scale(1.04);
  box-shadow: 0 0 8px rgba(255,255,255,0.4);
}

/* Floating glow effects */
.floating-glow {
  position: absolute;
  inset: 0;
  border-radius: 50%;
  background: radial-gradient(
    circle at center,
    rgba(255, 200, 150, 0.03) 0%,
    rgba(255, 150, 100, 0.02) 30%,
    rgba(255, 100, 50, 0.01) 60%,
    transparent 100%
  );
  filter: blur(20px);
  animation: floating-pulse 4s ease-in-out infinite;
}

@keyframes floating-pulse {
  0%, 100% { 
    transform: scale(1);
    opacity: 0.3;
  }
  50% { 
    transform: scale(1.1);
    opacity: 0.6;
  }
}

/* Ambient fog overlay */
.ambient-fog {
  position: absolute;
  inset: -50px;
  border-radius: 50%;
  background: radial-gradient(
    circle at center,
    rgba(255, 255, 255, 0.01) 0%,
    rgba(255, 200, 150, 0.008) 40%,
    rgba(255, 150, 100, 0.005) 70%,
    transparent 100%
  );
  filter: blur(40px);
  animation: fog-drift 8s ease-in-out infinite;
  pointer-events: none;
}

@keyframes fog-drift {
  0%, 100% { 
    transform: scale(0.8) rotate(0deg);
    opacity: 0.2;
  }
  33% { 
    transform: scale(1.2) rotate(120deg);
    opacity: 0.4;
  }
  66% { 
    transform: scale(0.9) rotate(240deg);
    opacity: 0.3;
  }
}

/* Blurred border glow */
.blurred-border {
  position: relative;
}

.blurred-border::before {
  content: '';
  position: absolute;
  inset: -2px;
  border-radius: 50%;
  padding: 2px;
  background: linear-gradient(
    45deg,
    rgba(255, 255, 255, 0.1),
    rgba(255, 200, 150, 0.08),
    rgba(255, 150, 100, 0.06),
    rgba(255, 255, 255, 0.1)
  );
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: xor;
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  filter: blur(1px);
  animation: border-shimmer 3s ease-in-out infinite;
}

@keyframes border-shimmer {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 0.7; }
}

/* Radial gradient overlays with tiny opacity */
.radial-overlay-1 {
  position: absolute;
  inset: 0;
  border-radius: 50%;
  background: radial-gradient(
    circle at 30% 30%,
    rgba(255, 255, 255, 0.02) 0%,
    transparent 50%
  );
  animation: overlay-shift-1 12s ease-in-out infinite;
}

.radial-overlay-2 {
  position: absolute;
  inset: 0;
  border-radius: 50%;
  background: radial-gradient(
    circle at 70% 70%,
    rgba(255, 200, 150, 0.015) 0%,
    transparent 60%
  );
  animation: overlay-shift-2 15s ease-in-out infinite reverse;
}

@keyframes overlay-shift-1 {
  0%, 100% { transform: translate(0, 0) scale(1); }
  33% { transform: translate(-5px, 5px) scale(1.05); }
  66% { transform: translate(5px, -5px) scale(0.95); }
}

@keyframes overlay-shift-2 {
  0%, 100% { transform: translate(0, 0) scale(1); }
  50% { transform: translate(3px, 3px) scale(1.08); }
}

/* Soft particle background effect */
.particle-layer {
  position: absolute;
  inset: 0;
  border-radius: 50%;
  overflow: hidden;
  pointer-events: none;
}

.particle {
  position: absolute;
  width: 1px;
  height: 1px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  animation: particle-float 6s ease-in-out infinite;
}

.particle:nth-child(1) { left: 20%; top: 30%; animation-delay: 0s; }
.particle:nth-child(2) { left: 70%; top: 20%; animation-delay: 1s; }
.particle:nth-child(3) { left: 80%; top: 60%; animation-delay: 2s; }
.particle:nth-child(4) { left: 30%; top: 80%; animation-delay: 3s; }
.particle:nth-child(5) { left: 50%; top: 40%; animation-delay: 4s; }

@keyframes particle-float {
  0%, 100% { 
    transform: translate(0, 0) scale(1);
    opacity: 0.1;
  }
  50% { 
    transform: translate(2px, -2px) scale(1.5);
    opacity: 0.3;
  }
}

/* Audio-reactive glow intensifiers */
.audio-reactive-low {
  --glow-intensity: 0.02;
  --scale-factor: 1.005;
}

.audio-reactive-medium {
  --glow-intensity: 0.04;
  --scale-factor: 1.01;
}

.audio-reactive-high {
  --glow-intensity: 0.06;
  --scale-factor: 1.02;
}

/* Apply glow intensity variables */
.floating-glow,
.ambient-fog {
  opacity: var(--glow-intensity, 0.02);
  transform: scale(var(--scale-factor, 1));
}
